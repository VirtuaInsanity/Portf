import datetime
import shutil
import os
import tkinter as tk
from tkinter import ttk
from tkinter import *
from tkinter import filedialog as fd
dateT = datetime.datetime.now()
dateTOD = datetime.date.today()
offset = datetime.timedelta(hours=3)
datetime.timezone(offset, name='МСК')
#TO DO Запоминание путей, релятивные пути для копирования по сети, добавить исключения
root = Tk()
root.title("Automata") 
root.geometry("400x790")

root.config(bg='blue')
root.resizable(False, False)
root.attributes("-toolwindow", True)
currYear = dateT.year
currMonth = dateT.month
currDay = dateT.day
if currDay < 10:
    currDay = "0" + str(currDay)
if currMonth < 10:
    currMonth = "0" + str(currMonth)
currDayWeek = dateT.strftime("%w")

#Функции
def DiskWorks():
    if currDayWeek == "4" or currDayWeek == "5":
        global localDisk; localDisk = fd.askdirectory()
        if localDisk != "": 
            print("---disk passed: " + str(localDisk))
            os.chdir(localDisk)
            if (os.path.exists("saveToDisk.txt")):
                print("saveToDisk file already exists, skipping")
                with open("saveToDisk.txt", encoding="utf8") as f:
                    for line in f:  #Прочитать то количество строк которое находится в файле (line читается из f)
                        print(line.strip())
            else:
                global saveToDiskfile; saveToDiskfile = open("saveToDisk.txt", "a")
                print("saveToDisk file created")
                with open("saveToDisk.txt", encoding="utf8") as f:
                    for line in f: 
                        print(line.strip())
                            #Что копировать
            if (os.path.exists("whatToCopy.txt")):
                print("whatToCopy file already exists, skipping")
                with open("whatToCopy.txt", encoding="utf8") as f:
                    for line in f:  #Прочитать то количество строк которое находится в файле (line читается из f)
                        print(line.strip())
            else:
                global whatToCopyfile; whatToCopyfile = open("whatToCopy.txt", "w")
                print("whatToCopy file created")
                with open("whatToCopy.txt", encoding="utf8") as f:
                    for line in f: 
                        print(line.strip())
                            #Исключения
            if (os.path.exists("exceptionsBACKUP.txt")):
                print("exceptionsBACKUP file already exists, skipping")
                with open("exceptionsBACKUP.txt", encoding="utf8") as f:
                    for line in f:  #Прочитать то количество строк которое находится в файле (line читается из f)
                        print(line.strip())
            else:
                global exceptionsBACKUPfile; exceptionsBACKUPfile = open("exceptionsBACKUP.txt", "w")
                print("exceptionsBACKUP file created")
                with open("exceptionsBACKUP.txt", encoding="utf8") as f:
                    for line in f: 
                        print(line.strip())            
            with open('saveToDisk.txt', 'w') as f:
                f.write("lll")
            if len(str(localDisk)) <= 3:
                print(1) #AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA сохранение пути не раюотеет
                locDiskAutom["text"] = localDisk + str(currDay) + "." + str(currMonth) + "." + str(currYear) + "-BACKUP"
                locDiskAutom["foreground"] = "black"
                with open('saveToDisk.txt', 'a') as f:
                    f.write("aaaaaaaaa")                
            else:
                print(2)
                locDiskAutom["text"] = localDisk + "/" + str(currDay) + "." + str(currMonth) + "." + str(currYear) + "-BACKUP"
                locDiskAutom["foreground"] = "black"
                with open('saveToDisk.txt', 'a') as f:
                    f.write("aaaaaaaaa")    
            if os.path.isdir(str(currDay) + "." + str(currMonth) + "." + str(currYear) + "-BACKUP"):
                print("Already exists")
            else:
                os.mkdir(str(currDay) + "." + str(currMonth) + "." + str(currYear) + "-BACKUP")
            with open("saveToDisk.txt", "a") as f:
                f.write(localDisk + str(currDay) + "." + str(currMonth) + "." + str(currYear) + "-BACKUP")
        else:
            print("NONE")
                #На какой диск

# Первый слой нотбука ОБЩИЙ
firstLayer = ttk.Notebook()
firstLayer.pack(expand="true",fill="both")

fold1 = ttk.Frame(firstLayer)
fold1.pack(fill="both")
firstLayer.add(fold1, text="Бэкап")

fold2 = ttk.Frame(firstLayer)
fold2.pack(fill="both")
firstLayer.add(fold2, text="Анализ места")

fold3 = ttk.Frame(firstLayer)
fold3.pack(fill="both")
firstLayer.add(fold3, text="Удаление данных")

# Второй слой нотбука ДИСКИ
secondLayer = ttk.Notebook(fold1)
secondLayer.pack(fill="both")
                                #Вкладка диска
tr12ext = ttk.Label(fold1, text=r"________________________________________________________________________________________________")
tr12ext.pack(fill="x")
locDiskAdd = ttk.Button(fold1, text="Нажмите чтобы выбрать папку куда пойдёт бэкап", command=DiskWorks)
locDiskAdd.pack(fill="x", padx=15, pady=5)

locDiskAutom = ttk.Label(fold1, foreground="gray", font=("Arial", 10))
locDiskAutom.pack(fill="x", padx=15, pady=5)
readresult = ""
with open("saveToDisk.txt", encoding="utf8") as f:
    for line in f:
        readresult = line.strip()
if readresult != "":
    locDiskAutom["text"] = readresult
    locDiskAutom["foreground"] = "black"
else:
    locDiskAutom["text"] = "Автоматическое сохранение пути не найдено, добавьте самостоятельно"
    locDiskAutom["foreground"] = "red"
tr1ext = ttk.Label(fold1, text=r"________________________________________________________________________________________________")
tr1ext.pack(fill="x")
#Что копировать

whatToCopyList = Listbox(fold1, width=100)
whatToCopyList.pack(anchor="nw", padx=10)
def addToCopyList(rrr):
    whatToCopyList.insert(END, rrr)
    with open('whatToCopy.txt', 'a') as f:
        f.write(rrr + "\n")

def deleteFromCopyList():
    whatToCopyList.delete(0, END)
    with open('whatToCopy.txt', 'w') as f:
        f.write("")
with open('whatToCopy.txt', encoding="utf8") as f:
    for line in f:
        whatToCopyList.insert(END, line.split())   
whatToCopyText = ttk.Label(fold1, text="Впишите нужные для копирования папки",font=("Arial", 10))
whatToCopyText.pack(fill="x", padx=15, pady=5)
whatToCopyEntry = ttk.Entry(fold1, width=100)
whatToCopyEntry.pack(anchor="nw", padx=10)

whatToCopySend = ttk.Button(fold1,text="Добавить путь", command=lambda:addToCopyList(whatToCopyEntry.get()))
whatToCopySend.pack(anchor="nw", padx=15)
clearCopyButt = ttk.Button(fold1,text="Отчистить сохранённые пути копирования", command=deleteFromCopyList)
clearCopyButt.pack(anchor="nw", padx=15)
#Исключения
trext = ttk.Label(fold1, text="________________________________________________________________________________________________")
trext.pack(fill="x")
whatToExceptList = Listbox(fold1, width=100)
whatToExceptList.pack(anchor="nw", padx=10)
def addToExceptionListCopy(rrr):
    whatToExceptList.insert(END, rrr)
    with open('exceptionsBACKUP.txt', 'a') as f:
        f.write(rrr + "\n")

def deleteFromExceptionListCopy():
    whatToExceptList.delete(0, END)
    with open('exceptionsBACKUP.txt', 'w') as f:
        f.write("")

with open('exceptionsBACKUP.txt', encoding="utf8") as f:
    for line in f:
        whatToExceptList.insert(END, line.split())   
whatToExceptText = ttk.Label(fold1, text="Впишите исключения",font=("Arial", 10))
whatToExceptText.pack(fill="x", padx=15, pady=5)
whatToExceptEntry = ttk.Entry(fold1, width=100)
whatToExceptEntry.pack(anchor="nw", padx=10)         
whatToExceptSend = ttk.Button(fold1,text="Добавить путь", command=lambda:addToExceptionListCopy(whatToExceptEntry.get()))
whatToExceptSend.pack(anchor="nw", padx=15)

clearExceptionsButt = ttk.Button(fold1,text="Отчистить исключения", command=deleteFromExceptionListCopy)
clearExceptionsButt.pack(anchor="nw", padx=15)

#Результат
def copyStart():
    ind = 0
    while ind != whatToCopyList.size():
        ind = ind + 1
        print(whatToCopyList.get(ind))

startCopy = ttk.Button(fold1,text="Начать копирование", command=copyStart)
startCopy.pack(anchor="center", padx=15, pady=15)

startCopyres = ttk.Label(fold1, text=0, foreground="gray")
startCopyres.pack(anchor="center", padx=15)
root.mainloop()
